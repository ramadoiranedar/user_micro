// Code generated by go-swagger; DO NOT EDIT.

package health_check

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ramadoiranedar/user_micro/gen/models"
)

// GetV1HealthOKCode is the HTTP code returned for type GetV1HealthOK
const GetV1HealthOKCode int = 200

/*
GetV1HealthOK ok

swagger:response getV1HealthOK
*/
type GetV1HealthOK struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthOK creates GetV1HealthOK with default headers values
func NewGetV1HealthOK() *GetV1HealthOK {

	return &GetV1HealthOK{}
}

// WithPayload adds the payload to the get v1 health o k response
func (o *GetV1HealthOK) WithPayload(payload *models.BasicResponse) *GetV1HealthOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health o k response
func (o *GetV1HealthOK) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthCreatedCode is the HTTP code returned for type GetV1HealthCreated
const GetV1HealthCreatedCode int = 201

/*
GetV1HealthCreated created

swagger:response getV1HealthCreated
*/
type GetV1HealthCreated struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthCreated creates GetV1HealthCreated with default headers values
func NewGetV1HealthCreated() *GetV1HealthCreated {

	return &GetV1HealthCreated{}
}

// WithPayload adds the payload to the get v1 health created response
func (o *GetV1HealthCreated) WithPayload(payload *models.BasicResponse) *GetV1HealthCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health created response
func (o *GetV1HealthCreated) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthBadRequestCode is the HTTP code returned for type GetV1HealthBadRequest
const GetV1HealthBadRequestCode int = 400

/*
GetV1HealthBadRequest bad request

swagger:response getV1HealthBadRequest
*/
type GetV1HealthBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthBadRequest creates GetV1HealthBadRequest with default headers values
func NewGetV1HealthBadRequest() *GetV1HealthBadRequest {

	return &GetV1HealthBadRequest{}
}

// WithPayload adds the payload to the get v1 health bad request response
func (o *GetV1HealthBadRequest) WithPayload(payload *models.BasicResponse) *GetV1HealthBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health bad request response
func (o *GetV1HealthBadRequest) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthUnauthorizedCode is the HTTP code returned for type GetV1HealthUnauthorized
const GetV1HealthUnauthorizedCode int = 401

/*
GetV1HealthUnauthorized unauthorized

swagger:response getV1HealthUnauthorized
*/
type GetV1HealthUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthUnauthorized creates GetV1HealthUnauthorized with default headers values
func NewGetV1HealthUnauthorized() *GetV1HealthUnauthorized {

	return &GetV1HealthUnauthorized{}
}

// WithPayload adds the payload to the get v1 health unauthorized response
func (o *GetV1HealthUnauthorized) WithPayload(payload *models.BasicResponse) *GetV1HealthUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health unauthorized response
func (o *GetV1HealthUnauthorized) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthForbiddenCode is the HTTP code returned for type GetV1HealthForbidden
const GetV1HealthForbiddenCode int = 403

/*
GetV1HealthForbidden forbidden

swagger:response getV1HealthForbidden
*/
type GetV1HealthForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthForbidden creates GetV1HealthForbidden with default headers values
func NewGetV1HealthForbidden() *GetV1HealthForbidden {

	return &GetV1HealthForbidden{}
}

// WithPayload adds the payload to the get v1 health forbidden response
func (o *GetV1HealthForbidden) WithPayload(payload *models.BasicResponse) *GetV1HealthForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health forbidden response
func (o *GetV1HealthForbidden) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthNotFoundCode is the HTTP code returned for type GetV1HealthNotFound
const GetV1HealthNotFoundCode int = 404

/*
GetV1HealthNotFound not found

swagger:response getV1HealthNotFound
*/
type GetV1HealthNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthNotFound creates GetV1HealthNotFound with default headers values
func NewGetV1HealthNotFound() *GetV1HealthNotFound {

	return &GetV1HealthNotFound{}
}

// WithPayload adds the payload to the get v1 health not found response
func (o *GetV1HealthNotFound) WithPayload(payload *models.BasicResponse) *GetV1HealthNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health not found response
func (o *GetV1HealthNotFound) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthMethodNotAllowedCode is the HTTP code returned for type GetV1HealthMethodNotAllowed
const GetV1HealthMethodNotAllowedCode int = 405

/*
GetV1HealthMethodNotAllowed method not allowed

swagger:response getV1HealthMethodNotAllowed
*/
type GetV1HealthMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthMethodNotAllowed creates GetV1HealthMethodNotAllowed with default headers values
func NewGetV1HealthMethodNotAllowed() *GetV1HealthMethodNotAllowed {

	return &GetV1HealthMethodNotAllowed{}
}

// WithPayload adds the payload to the get v1 health method not allowed response
func (o *GetV1HealthMethodNotAllowed) WithPayload(payload *models.BasicResponse) *GetV1HealthMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health method not allowed response
func (o *GetV1HealthMethodNotAllowed) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthUnsupportedMediaTypeCode is the HTTP code returned for type GetV1HealthUnsupportedMediaType
const GetV1HealthUnsupportedMediaTypeCode int = 415

/*
GetV1HealthUnsupportedMediaType unsupported media type

swagger:response getV1HealthUnsupportedMediaType
*/
type GetV1HealthUnsupportedMediaType struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthUnsupportedMediaType creates GetV1HealthUnsupportedMediaType with default headers values
func NewGetV1HealthUnsupportedMediaType() *GetV1HealthUnsupportedMediaType {

	return &GetV1HealthUnsupportedMediaType{}
}

// WithPayload adds the payload to the get v1 health unsupported media type response
func (o *GetV1HealthUnsupportedMediaType) WithPayload(payload *models.BasicResponse) *GetV1HealthUnsupportedMediaType {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health unsupported media type response
func (o *GetV1HealthUnsupportedMediaType) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthUnsupportedMediaType) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(415)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthUnprocessableEntityCode is the HTTP code returned for type GetV1HealthUnprocessableEntity
const GetV1HealthUnprocessableEntityCode int = 422

/*
GetV1HealthUnprocessableEntity unprocessable entity

swagger:response getV1HealthUnprocessableEntity
*/
type GetV1HealthUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthUnprocessableEntity creates GetV1HealthUnprocessableEntity with default headers values
func NewGetV1HealthUnprocessableEntity() *GetV1HealthUnprocessableEntity {

	return &GetV1HealthUnprocessableEntity{}
}

// WithPayload adds the payload to the get v1 health unprocessable entity response
func (o *GetV1HealthUnprocessableEntity) WithPayload(payload *models.BasicResponse) *GetV1HealthUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health unprocessable entity response
func (o *GetV1HealthUnprocessableEntity) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthInternalServerErrorCode is the HTTP code returned for type GetV1HealthInternalServerError
const GetV1HealthInternalServerErrorCode int = 500

/*
GetV1HealthInternalServerError internal server error

swagger:response getV1HealthInternalServerError
*/
type GetV1HealthInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthInternalServerError creates GetV1HealthInternalServerError with default headers values
func NewGetV1HealthInternalServerError() *GetV1HealthInternalServerError {

	return &GetV1HealthInternalServerError{}
}

// WithPayload adds the payload to the get v1 health internal server error response
func (o *GetV1HealthInternalServerError) WithPayload(payload *models.BasicResponse) *GetV1HealthInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health internal server error response
func (o *GetV1HealthInternalServerError) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetV1HealthBadGatewayCode is the HTTP code returned for type GetV1HealthBadGateway
const GetV1HealthBadGatewayCode int = 502

/*
GetV1HealthBadGateway bad gateway

swagger:response getV1HealthBadGateway
*/
type GetV1HealthBadGateway struct {

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthBadGateway creates GetV1HealthBadGateway with default headers values
func NewGetV1HealthBadGateway() *GetV1HealthBadGateway {

	return &GetV1HealthBadGateway{}
}

// WithPayload adds the payload to the get v1 health bad gateway response
func (o *GetV1HealthBadGateway) WithPayload(payload *models.BasicResponse) *GetV1HealthBadGateway {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health bad gateway response
func (o *GetV1HealthBadGateway) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthBadGateway) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(502)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetV1HealthDefault default

swagger:response getV1HealthDefault
*/
type GetV1HealthDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.BasicResponse `json:"body,omitempty"`
}

// NewGetV1HealthDefault creates GetV1HealthDefault with default headers values
func NewGetV1HealthDefault(code int) *GetV1HealthDefault {
	if code <= 0 {
		code = 500
	}

	return &GetV1HealthDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get v1 health default response
func (o *GetV1HealthDefault) WithStatusCode(code int) *GetV1HealthDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get v1 health default response
func (o *GetV1HealthDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get v1 health default response
func (o *GetV1HealthDefault) WithPayload(payload *models.BasicResponse) *GetV1HealthDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get v1 health default response
func (o *GetV1HealthDefault) SetPayload(payload *models.BasicResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetV1HealthDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
